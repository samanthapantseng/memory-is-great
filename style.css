* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Open Sans', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
}

body {
    background-color: white;
}

img {
    width: 100%;
    height: 100%;
}

/* Wide screen */
@media screen and (min-width: 1150px) {
    #stop {
        font-size: 1em;
    }

    button {
        padding: 1em 1em;
    }

    .stats-container {
        font-size: 1em;
    }
}

/* Medium screen */
@media screen and (max-width: 1150px) {
    #stop {
        font-size: 0.8em;
    }

    button {
        padding: 0.5em 0.5em;
    }

    .stats-container {
        font-size: 0.8em;
    }
}

/* Wide screen */
@media screen and (min-width: 750px) {
    .wrapper {
        flex-direction: row;
    }

    .lateral-container {
        width: 10%;
    }

    #stop {
        width: 80%;
    }

    .card-before {
        font-size: 2.8em;
    }
}

/* Mobile screen */
@media screen and (max-width: 750px) {
    .wrapper {
        flex-direction: column;
    }

    .lateral-container {
        width: 100%;
    }

    #stop {
        margin-top: 1em;
    }

    .stats-container {
        margin-bottom: 1em;
    }

    .card-before {
        font-size: 1.2em;
    }
}

.wrapper {
    box-sizing: content-box;
    width: 80%;
    padding: 2.5em 0em;
    background-color: white;
    position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-container {
    position: relative;
    width: 80%;
    display: grid;
    gap: 10px;
}

.card-container {
    position: relative;
    width: 100%;
    aspect-ratio: 1 / 1;
    cursor: pointer;
    color: white;
}

.card-before,
.card-after {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    /*border: 4px solid black;*/
    transition: transform 0.7s ease-out;
    backface-visibility: hidden;
}

.card-before {
    background-color: #db0000;
    font-weight: 600;
}

.card-after {
    background-color: #db0000;
    transform: rotateY(180deg);
}

.card-container.flipped .card-before {
    transform: rotateY(180deg);
}

.card-container.flipped .card-after {
    transform: rotateY(0deg);
}

.controls-container {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    height: 100%;
    background-color: white;
    top: 0;
}

.controls-container p {
    text-align: center;
}

.controls-container button {
    align-self: center;
}

.win-container {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    height: 100%;
    background-color: white;
    top: 0;
}

.win-container p {
    text-align: center;
}

.win-container button {
    align-self: center;
}

.lateral-container {
    display: flex;
    justify-content: center;
}

button {
    border: none;
    cursor: pointer;
}

.stats-container {
    color: #db0000;
    word-wrap: break-word;
    width: 80%;
    text-align: center;
}

#stop {
    word-wrap: break-word;
    display: block;
    background-color: #db0000;
    color: white;
    text-align: center;
}

#start {
    padding: 0.5em;
    background-color: black;
}

#stop:hover {
    animation: infiniteSpinner 1.2s linear infinite;
}

.controls-container button {
    background-color: #db0000;
    color: white;
    font-size: 1em;
}

.controls-container button:hover {
    animation: infiniteSpinner 1.2s linear infinite;
}

.option-container {
    position: absolute;
}

.option-container input[name="dificulty"] {
    accent-color: red;
}

.option-container input[name="dificulty"]+label {
    color: red;
}

.option-container input[name="place"] {
    accent-color: blue;
}

.option-container input[name="place"]+label {
    color: blue;
}

.option-container label {
    font-size: 1em;
}

.hide {
    display: none;
}

.spinner {
    animation: matchedSpinner 4s forwards;
    animation-delay: 1s;
}

.appear {
    animation: instantAppear 1s;
}

@keyframes infiniteSpinner {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes matchedSpinner {
    from {
        opacity: 1;
        transform: rotate(0deg);
    }

    25% {
        opacity: 1;
        transform: rotate(-45deg);
    }

    80% {
        opacity: 1;
        transform: rotate(360deg);
    }

    99% {
        opacity: 1;
        transform: rotate(360deg);
    }

    to {
        opacity: 0;
        transform: rotate(360deg);
    }
}

@keyframes instantAppear {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

}


#result {
    text-align: center;
}

#result h2 {
    font-size: 2.5em;
}

#result h4 {
    font-size: 1.8em;
    margin: 0.6em 0 1em 0;
}